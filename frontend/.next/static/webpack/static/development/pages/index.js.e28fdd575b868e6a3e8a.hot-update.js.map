{"version":3,"file":"static/webpack/static/development/pages/index.js.e28fdd575b868e6a3e8a.hot-update.js","sources":["webpack:///./components/main/Search.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Loader\";\nconst Cookies = require(\"js-cookie\");\nvar CryptoJS = require(\"crypto-js\");\n\nexport default function Search() {\n  const [keyword, editKeyword] = useState();\n  const [tooMany, setTooMany] = useState(false);\n  const [wordTooMany, setWordTooMany] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState();\n  const [isData, setIsData] = useState();\n\n  async function sub() {\n    setTooMany(false);\n    setWordTooMany(false);\n    let cookieExists = get();\n    if (cookieExists == false) {\n      let ciphertext = CryptoJS.AES.encrypt(keyword, \"//secr/k!!\");\n      //   let ciphernum = CryptoJS.AES.encrypt(\"1\", \"//secr/k!!\");\n      //   Cookies.set(\"num\", ciphernum, { expires: 0.02083333333 });\n      Cookies.set(\"wrds\", ciphertext, { expires: 0.02083333333 });\n      console.log(\"fetching\");\n      let formattedKw = keyword.split(\" \").join(\"+\");\n      let getStr = \"http://localhost:4000/keyword/\" + formattedKw;\n      setLoading(true);\n      fetch(getStr);\n      //   axios.get(getStr).then(response => {\n      //     console.log(response);\n      //     setIsData(true);\n      //     setData(response.data);\n      //     setLoading(false);\n      //   });\n    } else {\n      let kwArray = cookieExists.split(\"+\");\n      console.log(kwArray);\n      let newText = cookieExists + \"+\" + keyword;\n      let ciphertext = CryptoJS.AES.encrypt(newText, \"//secr/k!!\");\n      Cookies.set(\"wrds\", ciphertext, { expires: 0.02083333333 });\n      for (let i = 0; i < kwArray.length; i++) {\n        if (keyword == kwArray[i]) {\n          console.log(\"word found\");\n          setWordTooMany(true);\n          return;\n        }\n      }\n      if (kwArray.length >= 5) {\n        setTooMany(true);\n        return;\n      }\n      //   let numCookie = getNumCookie();\n      //   numCookie = parseInt(numCookie);\n      //   if (numCookie == 5) {\n      //     setTooMany(true);\n      //     return;\n      //   }\n      //   numCookie += 1;\n      //   let numtext = CryptoJS.AES.encrypt(numCookie.toString(), \"//secr/k!!\");\n      //   Cookies.set(\"num\", numtext, { expires: 0.02083333333 });\n      console.log(\"found kwArray and fetching\");\n      setLoading(true);\n      let formattedKw = keyword.split(\" \").join(\"+\");\n      let getStr = \"http://localhost:4000/keyword/\" + formattedKw;\n      fetch(getStr);\n    }\n  }\n\n  function fetch(getStr) {\n    axios.get(getStr).then(response => {\n      let dens = parseFloat(response.data.density);\n      dens = dens.toFixed(2);\n      dens = dens.toString();\n      let wrds = parseInt(response.data.words);\n      wrds = wrds.toString();\n      let newDat = {};\n      newDat[\"density\"] = dens;\n      newDat[\"words\"] = wrds;\n      console.log(newDat);\n      setData(newDat);\n      setIsData(true);\n      setLoading(false);\n      console.log(response);\n    });\n  }\n\n  //   function getNumCookie() {\n  //     let cook = Cookies.get(\"num\");\n  //     if (cook == undefined) {\n  //       let numtext = CryptoJS.AES.encrypt(\"1\", \"//secr/k!!\");\n  //       Cookies.set(\"num\", numtext, { expires: 0.02083333333 });\n  //       return \"1\";\n  //     }\n  //     var bytes = CryptoJS.AES.decrypt(cook.toString(), \"//secr/k!!\");\n  //     var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n  //     console.log(plaintext);\n  //     return plaintext;\n  //   }\n\n  function get() {\n    let text = Cookies.get(\"wrds\");\n    if (text == undefined) {\n      return false;\n    } else {\n      var bytes = CryptoJS.AES.decrypt(text.toString(), \"//secr/k!!\");\n      var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n      console.log(plaintext);\n      return plaintext;\n    }\n  }\n\n  function searchAgain() {\n    setIsData(false);\n  }\n\n  async function decrypt(text) {\n    var bytes = CryptoJS.AES.decrypt(text.toString(), \"//secr/k!!\");\n    var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n    return plaintext;\n  }\n  if (!loading && !isData) {\n    return (\n      <div className=\"outer-search-wrap\">\n        <div className=\"inner-search-wrap\">\n          <div className=\"search-title\">\n            <strong>enter your keyword</strong>\n          </div>\n          <div className=\"searchbar-wrap\">\n            <input\n              className=\"keyword-input\"\n              type=\"text\"\n              onChange={e => editKeyword(e.target.value)}\n            />\n            <button className=\"search-button\" onClick={sub}>\n              Get Metrics\n            </button>\n          </div>\n          <style jsx>\n            {`\n              div.inner-search-wrap {\n                display: flex;\n                flex-direction: column;\n                padding: 15px;\n              }\n              div.outer-search-wrap {\n                padding: 10px;\n                display: flex;\n                flex-direction: column;\n              }\n              div.search-title {\n                margin: auto;\n                margin-bottom: 10px;\n              }\n              button.search-button {\n                border-radius: 0;\n                border: none;\n                padding: 8px;\n                font-size: 10px;\n                background-color: #e22b2e;\n                color: #fff;\n                text-transform: uppercase;\n                letter-spacing: 1.5px;\n                font-weight: 700;\n              }\n              .search-button:hover {\n                background: #fff;\n                color: #000;\n                box-shadow: 0 12px 60px 0 #e22b2e;\n              }\n              div.searchbar-wrap {\n                display: flex;\n                flex-direction: row;\n              }\n              input.keyword-input {\n                font-size: 13px;\n              }\n            `}\n          </style>\n        </div>\n      </div>\n    );\n  } else if (!!loading) {\n    return (\n      <div className=\"outer-search-wrap\">\n        <div className=\"inner-search-wrap\">\n          <div className=\"search-title\">\n            <strong>\n              fetching data for top 50 results...\n              <br /> this could take a minute.\n            </strong>\n          </div>\n          <div className=\"loading-wrap\">\n            <Spinner />\n          </div>\n          <style jsx>\n            {`\n              div.inner-search-wrap {\n                display: flex;\n                flex-direction: column;\n                padding: 15px;\n              }\n              div.outer-search-wrap {\n                padding: 10px;\n                display: flex;\n                flex-direction: column;\n              }\n              div.search-title {\n                margin: auto;\n                margin-bottom: 10px;\n                text-align: center;\n                margin-bottom: 5px;\n              }\n              button.search-button {\n                border-radius: 0;\n                border: none;\n                padding: 8px;\n                font-size: 10px;\n                background-color: #e22b2e;\n                color: #fff;\n                text-transform: uppercase;\n                letter-spacing: 1.5px;\n                font-weight: 700;\n              }\n              .search-button:hover {\n                background: #fff;\n                color: #000;\n                box-shadow: 0 12px 60px 0 #e22b2e;\n              }\n              div.loading-wrap {\n                display: flex;\n                flex-direction: row;\n              }\n              input.keyword-input {\n                font-size: 13px;\n              }\n            `}\n          </style>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"outer-data-wrap\">\n          <div className=\"data-search-wrap\">\n            <div className=\"search-title\">\n              <div>\n                results for <strong>{keyword}</strong>\n              </div>\n            </div>\n            <div className=\"data-wrap\">\n              <div className=\"data-row\">\n                <div className=\"data-dat\">kw density</div>\n                <div className=\"data-dat-right\">{data.density}%</div>\n              </div>\n              <div className=\"data-row-2\">\n                <div className=\"data-dat\">avg wordcount</div>\n                <div className=\"data-dat-right\">{data.words} words</div>\n              </div>\n            </div>\n            <div className=\"search-again-wrap\">\n              <button className=\"search-button\" onClick={searchAgain}>\n                search again\n              </button>\n            </div>\n          </div>\n        </div>\n        <style jsx>\n          {`\n            div.data-wrap {\n              display: flex;\n              flex-direction: column;\n              border: 1px solid rgba(0, 0, 0, 0.5);\n              margin: 12px 0;\n            }\n            .search-again-wrap {\n              display: flex;\n            }\n            div.data-row {\n              display: flex;\n              flex-direction: row;\n              max-width: 100%;\n              padding: 5px;\n            }\n            div.data-row-2 {\n              display: flex;\n              flex-direction: row;\n              max-width: 100%;\n              border-top: 1px solid rgba(0, 0, 0, 0.5);\n              padding: 5px;\n            }\n            div.data-dat {\n              width: 50%;\n            }\n            div.data-dat-right {\n              width: 50%;\n              text-align: right;\n            }\n            div.data-search-wrap {\n              display: flex;\n              flex-direction: column;\n              padding: 15px;\n              max-width: 100%;\n            }\n            .outer-data-wrap {\n              padding: 10px;\n              display: flex;\n              flex-direction: column;\n              min-width: 300px;\n            }\n            div.search-title {\n              margin: auto;\n              margin-bottom: 10px;\n              text-align: center;\n              margin-bottom: 5px;\n            }\n            button.search-button {\n              border-radius: 0;\n              border: none;\n              padding: 8px;\n              font-size: 10px;\n              background-color: #e22b2e;\n              color: #fff;\n              text-transform: uppercase;\n              letter-spacing: 1.5px;\n              font-weight: 700;\n              margin: auto;\n            }\n            .search-button:hover {\n              background: #fff;\n              color: #e22b2e;\n              border: 1px solid #e22b2e;\n              box-shadow: 0 4px 10px 0 rgba(0, 0, 0, 0.4);\n            }\n            div.loading-wrap {\n              display: flex;\n              flex-direction: row;\n            }\n            input.keyword-input {\n              font-size: 13px;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAQA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;AACA;AADA;AAqBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA2BA;AACA;AA7BA;AACA;AADA;AA0BA;AA1BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAiCA;AAlCA;AACA;AADA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AACA;AA6DA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5GA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AA6GA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7GA;AAAA;AACA;AAiwnBA;AAAA;AAAA;AAuGA;AACA;;;;A","sourceRoot":""}