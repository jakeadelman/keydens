{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/manx/projects/keyword-density/frontend/components/main/Search.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Loader\";\n\nvar Cookies = require(\"js-cookie\");\n\nvar CryptoJS = require(\"crypto-js\");\n\nexport default function Search() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyword = _useState2[0],\n      editKeyword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tooMany = _useState4[0],\n      setTooMany = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      wordTooMany = _useState6[0],\n      setWordTooMany = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      setData = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isData = _useState12[0],\n      setIsData = _useState12[1];\n\n  function sub() {\n    return _sub.apply(this, arguments);\n  }\n\n  function _sub() {\n    _sub = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var cookieExists, ciphertext, formattedKw, getStr, kwArray, i, newText, _ciphertext, _formattedKw, _getStr;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setTooMany(false);\n              setWordTooMany(false);\n              cookieExists = get();\n\n              if (!(cookieExists == false)) {\n                _context.next = 13;\n                break;\n              }\n\n              ciphertext = CryptoJS.AES.encrypt(keyword, \"//secr/k!!\");\n              Cookies.set(\"wrds\", ciphertext, {\n                expires: 0.02083333333\n              });\n              console.log(\"fetching\");\n              formattedKw = keyword.split(\" \").join(\"+\");\n              getStr = \"http://localhost:4000/keyword/\" + formattedKw;\n              setLoading(true);\n              fetch(getStr);\n              _context.next = 34;\n              break;\n\n            case 13:\n              kwArray = cookieExists.split(\"+\");\n              console.log(kwArray);\n              i = 0;\n\n            case 16:\n              if (!(i < kwArray.length)) {\n                _context.next = 24;\n                break;\n              }\n\n              if (!(keyword == kwArray[i])) {\n                _context.next = 21;\n                break;\n              }\n\n              console.log(\"word found\");\n              setWordTooMany(true);\n              return _context.abrupt(\"return\");\n\n            case 21:\n              i++;\n              _context.next = 16;\n              break;\n\n            case 24:\n              if (!(kwArray.length >= 5)) {\n                _context.next = 27;\n                break;\n              }\n\n              setTooMany(true);\n              return _context.abrupt(\"return\");\n\n            case 27:\n              newText = cookieExists + \"+\" + keyword;\n              _ciphertext = CryptoJS.AES.encrypt(newText, \"//secr/k!!\");\n              Cookies.set(\"wrds\", _ciphertext, {\n                expires: 0.02083333333\n              });\n              setLoading(true);\n              _formattedKw = keyword.split(\" \").join(\"+\");\n              _getStr = \"http://localhost:4000/keyword/\" + _formattedKw;\n              fetch(_getStr);\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _sub.apply(this, arguments);\n  }\n\n  function fetch(getStr) {\n    axios.get(getStr).then(function (response) {\n      var dens = _parseFloat(response.data.density);\n\n      dens = dens.toFixed(2);\n      dens = dens.toString();\n\n      var wrds = _parseInt(response.data.words);\n\n      wrds = wrds.toString();\n\n      var times = _parseFloat(response.data.count);\n\n      times = times.toFixed(2);\n      times = times.toString();\n      var newDat = {};\n      newDat[\"density\"] = dens;\n      newDat[\"words\"] = wrds;\n      newDat[\"count\"] = times;\n      console.log(newDat);\n      setData(newDat);\n      setIsData(true);\n      setLoading(false);\n      console.log(response);\n    });\n  }\n\n  function get() {\n    var text = Cookies.get(\"wrds\");\n\n    if (text == undefined) {\n      return false;\n    } else {\n      var bytes = CryptoJS.AES.decrypt(text.toString(), \"//secr/k!!\");\n      var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n      console.log(plaintext);\n      return plaintext;\n    }\n  }\n\n  function searchAgain() {\n    setIsData(false);\n  }\n\n  function decrypt(_x) {\n    return _decrypt.apply(this, arguments);\n  }\n\n  function _decrypt() {\n    _decrypt = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(text) {\n      var bytes, plaintext;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              bytes = CryptoJS.AES.decrypt(text.toString(), \"//secr/k!!\");\n              plaintext = bytes.toString(CryptoJS.enc.Utf8);\n              return _context2.abrupt(\"return\", plaintext);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _decrypt.apply(this, arguments);\n  }\n\n  if (!loading && !isData) {\n    return React.createElement(\"div\", {\n      className: \"outer-search-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-2851148752\" + \" \" + \"inner-search-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-2851148752\" + \" \" + \"search-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"jsx-2851148752\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"enter your keyword\")), React.createElement(\"div\", {\n      className: \"jsx-2851148752\" + \" \" + \"searchbar-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: function onChange(e) {\n        return editKeyword(e.target.value);\n      },\n      className: \"jsx-2851148752\" + \" \" + \"keyword-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: sub,\n      className: \"jsx-2851148752\" + \" \" + \"search-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Get Metrics\")), !!wordTooMany ? React.createElement(\"div\", {\n      className: \"jsx-2851148752\" + \" \" + \"alert-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-2851148752\" + \" \" + \"inner-alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"You can only search the same keyword once every 30 mins. Try another keyword.\")) : null, !!tooMany ? React.createElement(\"div\", {\n      className: \"jsx-2851148752\" + \" \" + \"alert-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-2851148752\" + \" \" + \"inner-alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"You only have 5 searches every 30 mins. Please try again later.\")) : null, React.createElement(_JSXStyle, {\n      id: \"2851148752\",\n      __self: this\n    }, \"div.alert-bar.jsx-2851148752{max-width:200px;font-size:12px;padding:5px;margin:12px;border:1px solid #e22b2e;}div.inner-search-wrap.jsx-2851148752{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:15px;}div.outer-search-wrap.jsx-2851148752{padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}div.search-title.jsx-2851148752{margin:auto;margin-bottom:14px;}button.search-button.jsx-2851148752{border-radius:0;border:none;padding:8px;font-size:10px;background-color:#e22b2e;color:#fff;text-transform:uppercase;-webkit-letter-spacing:1.5px;-moz-letter-spacing:1.5px;-ms-letter-spacing:1.5px;letter-spacing:1.5px;font-weight:700;}.search-button.jsx-2851148752:hover{background:#fff;color:#000;box-shadow:0 12px 60px 0 #e22b2e;}div.searchbar-wrap.jsx-2851148752{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}input.keyword-input.jsx-2851148752{font-size:13px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/manx/projects/keyword-density/frontend/components/main/Search.js */\")));\n  } else if (!!loading) {\n    return React.createElement(\"div\", {\n      className: \"outer-search-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-3598683652\" + \" \" + \"inner-search-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-3598683652\" + \" \" + \"search-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"jsx-3598683652\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"fetching data for top 50 results...\", React.createElement(\"br\", {\n      className: \"jsx-3598683652\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), \" this could take a minute.\")), React.createElement(\"div\", {\n      className: \"jsx-3598683652\" + \" \" + \"loading-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(_JSXStyle, {\n      id: \"3598683652\",\n      __self: this\n    }, \"div.inner-search-wrap.jsx-3598683652{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:15px;}div.outer-search-wrap.jsx-3598683652{padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}div.search-title.jsx-3598683652{margin:auto;margin-bottom:10px;text-align:center;margin-bottom:5px;}button.search-button.jsx-3598683652{border-radius:0;border:none;padding:8px;font-size:10px;background-color:#e22b2e;color:#fff;text-transform:uppercase;-webkit-letter-spacing:1.5px;-moz-letter-spacing:1.5px;-ms-letter-spacing:1.5px;letter-spacing:1.5px;font-weight:700;}.search-button.jsx-3598683652:hover{background:#fff;color:#000;box-shadow:0 12px 60px 0 #e22b2e;}div.loading-wrap.jsx-3598683652{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}input.keyword-input.jsx-3598683652{font-size:13px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/manx/projects/keyword-density/frontend/components/main/Search.js */\")));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"jsx-522248683\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"outer-data-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-search-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"search-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-522248683\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"results for \", React.createElement(\"strong\", {\n      className: \"jsx-522248683\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, keyword))), React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-dat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"kw density\"), React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-dat-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, data.density, \"%\")), React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-row-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-dat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"avg wordcount\"), React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"data-dat-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, data.words))), React.createElement(\"div\", {\n      className: \"jsx-522248683\" + \" \" + \"search-again-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: searchAgain,\n      className: \"jsx-522248683\" + \" \" + \"search-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"search again\")))), React.createElement(_JSXStyle, {\n      id: \"522248683\",\n      __self: this\n    }, \"div.data-wrap.jsx-522248683{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;border:1px solid rgba(0,0,0,0.5);margin:12px 0;}.search-again-wrap.jsx-522248683{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}div.data-row.jsx-522248683{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;max-width:100%;padding:5px;}div.data-row-2.jsx-522248683{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;max-width:100%;border-top:1px solid rgba(0,0,0,0.5);padding:5px;}div.data-dat.jsx-522248683{width:50%;}div.data-dat-right.jsx-522248683{width:50%;text-align:right;}div.data-search-wrap.jsx-522248683{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:15px;max-width:100%;}.outer-data-wrap.jsx-522248683{padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;min-width:300px;}div.search-title.jsx-522248683{margin:auto;margin-bottom:10px;text-align:center;margin-bottom:5px;}button.search-button.jsx-522248683{border-radius:0;border:none;padding:8px;font-size:10px;background-color:#e22b2e;color:#fff;text-transform:uppercase;-webkit-letter-spacing:1.5px;-moz-letter-spacing:1.5px;-ms-letter-spacing:1.5px;letter-spacing:1.5px;font-weight:700;margin:auto;}.search-button.jsx-522248683:hover{background:#fff;color:#e22b2e;border:1px solid #e22b2e;box-shadow:0 4px 10px 0 rgba(0,0,0,0.4);}div.loading-wrap.jsx-522248683{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}input.keyword-input.jsx-522248683{font-size:13px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/manx/projects/keyword-density/frontend/components/main/Search.js */\"));\n  }\n}","map":{"version":3,"sources":["/Users/manx/projects/keyword-density/frontend/components/main/Search.js"],"names":["useState","axios","Spinner","Cookies","require","CryptoJS","Search","keyword","editKeyword","tooMany","setTooMany","wordTooMany","setWordTooMany","loading","setLoading","data","setData","isData","setIsData","sub","cookieExists","get","ciphertext","AES","encrypt","set","expires","console","log","formattedKw","split","join","getStr","fetch","kwArray","i","length","newText","then","response","dens","density","toFixed","toString","wrds","words","times","count","newDat","text","undefined","bytes","decrypt","plaintext","enc","Utf8","searchAgain","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Loader\";\nconst Cookies = require(\"js-cookie\");\nvar CryptoJS = require(\"crypto-js\");\n\nexport default function Search() {\n  const [keyword, editKeyword] = useState();\n  const [tooMany, setTooMany] = useState(false);\n  const [wordTooMany, setWordTooMany] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState();\n  const [isData, setIsData] = useState();\n\n  async function sub() {\n    setTooMany(false);\n    setWordTooMany(false);\n    let cookieExists = get();\n    if (cookieExists == false) {\n      let ciphertext = CryptoJS.AES.encrypt(keyword, \"//secr/k!!\");\n      Cookies.set(\"wrds\", ciphertext, { expires: 0.02083333333 });\n      console.log(\"fetching\");\n      let formattedKw = keyword.split(\" \").join(\"+\");\n      let getStr = \"http://localhost:4000/keyword/\" + formattedKw;\n      setLoading(true);\n      fetch(getStr);\n    } else {\n      let kwArray = cookieExists.split(\"+\");\n      console.log(kwArray);\n      for (let i = 0; i < kwArray.length; i++) {\n        if (keyword == kwArray[i]) {\n          console.log(\"word found\");\n          setWordTooMany(true);\n          return;\n        }\n      }\n      if (kwArray.length >= 5) {\n        setTooMany(true);\n        return;\n      }\n      let newText = cookieExists + \"+\" + keyword;\n      let ciphertext = CryptoJS.AES.encrypt(newText, \"//secr/k!!\");\n      Cookies.set(\"wrds\", ciphertext, { expires: 0.02083333333 });\n      setLoading(true);\n      let formattedKw = keyword.split(\" \").join(\"+\");\n      let getStr = \"http://localhost:4000/keyword/\" + formattedKw;\n      fetch(getStr);\n    }\n  }\n\n  function fetch(getStr) {\n    axios.get(getStr).then(response => {\n      let dens = parseFloat(response.data.density);\n      dens = dens.toFixed(2);\n      dens = dens.toString();\n      let wrds = parseInt(response.data.words);\n      wrds = wrds.toString();\n      let times = parseFloat(response.data.count);\n      times = times.toFixed(2);\n      times = times.toString();\n      let newDat = {};\n      newDat[\"density\"] = dens;\n      newDat[\"words\"] = wrds;\n      newDat[\"count\"] = times;\n      console.log(newDat);\n      setData(newDat);\n      setIsData(true);\n      setLoading(false);\n      console.log(response);\n    });\n  }\n\n  function get() {\n    let text = Cookies.get(\"wrds\");\n    if (text == undefined) {\n      return false;\n    } else {\n      var bytes = CryptoJS.AES.decrypt(text.toString(), \"//secr/k!!\");\n      var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n      console.log(plaintext);\n      return plaintext;\n    }\n  }\n\n  function searchAgain() {\n    setIsData(false);\n  }\n\n  async function decrypt(text) {\n    var bytes = CryptoJS.AES.decrypt(text.toString(), \"//secr/k!!\");\n    var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n    return plaintext;\n  }\n  if (!loading && !isData) {\n    return (\n      <div className=\"outer-search-wrap\">\n        <div className=\"inner-search-wrap\">\n          <div className=\"search-title\">\n            <strong>enter your keyword</strong>\n          </div>\n          <div className=\"searchbar-wrap\">\n            <input\n              className=\"keyword-input\"\n              type=\"text\"\n              onChange={e => editKeyword(e.target.value)}\n            />\n            <button className=\"search-button\" onClick={sub}>\n              Get Metrics\n            </button>\n          </div>\n\n          {!!wordTooMany ? (\n            <div className=\"alert-bar\">\n              <div className=\"inner-alert\">\n                You can only search the same keyword once every 30 mins. Try\n                another keyword.\n              </div>\n            </div>\n          ) : null}\n          {!!tooMany ? (\n            <div className=\"alert-bar\">\n              <div className=\"inner-alert\">\n                You only have 5 searches every 30 mins. Please try again later.\n              </div>\n            </div>\n          ) : null}\n\n          <style jsx>\n            {`\n              div.alert-bar {\n                max-width: 200px;\n                font-size: 12px;\n                padding: 5px;\n                margin: 12px;\n                border: 1px solid #e22b2e;\n              }\n              div.inner-search-wrap {\n                display: flex;\n                flex-direction: column;\n                padding: 15px;\n              }\n              div.outer-search-wrap {\n                padding: 10px;\n                display: flex;\n                flex-direction: column;\n              }\n              div.search-title {\n                margin: auto;\n                margin-bottom: 14px;\n              }\n              button.search-button {\n                border-radius: 0;\n                border: none;\n                padding: 8px;\n                font-size: 10px;\n                background-color: #e22b2e;\n                color: #fff;\n                text-transform: uppercase;\n                letter-spacing: 1.5px;\n                font-weight: 700;\n              }\n              .search-button:hover {\n                background: #fff;\n                color: #000;\n                box-shadow: 0 12px 60px 0 #e22b2e;\n              }\n              div.searchbar-wrap {\n                display: flex;\n                flex-direction: row;\n              }\n              input.keyword-input {\n                font-size: 13px;\n              }\n            `}\n          </style>\n        </div>\n      </div>\n    );\n  } else if (!!loading) {\n    return (\n      <div className=\"outer-search-wrap\">\n        <div className=\"inner-search-wrap\">\n          <div className=\"search-title\">\n            <strong>\n              fetching data for top 50 results...\n              <br /> this could take a minute.\n            </strong>\n          </div>\n          <div className=\"loading-wrap\">\n            <Spinner />\n          </div>\n          <style jsx>\n            {`\n              div.inner-search-wrap {\n                display: flex;\n                flex-direction: column;\n                padding: 15px;\n              }\n              div.outer-search-wrap {\n                padding: 10px;\n                display: flex;\n                flex-direction: column;\n              }\n              div.search-title {\n                margin: auto;\n                margin-bottom: 10px;\n                text-align: center;\n                margin-bottom: 5px;\n              }\n              button.search-button {\n                border-radius: 0;\n                border: none;\n                padding: 8px;\n                font-size: 10px;\n                background-color: #e22b2e;\n                color: #fff;\n                text-transform: uppercase;\n                letter-spacing: 1.5px;\n                font-weight: 700;\n              }\n              .search-button:hover {\n                background: #fff;\n                color: #000;\n                box-shadow: 0 12px 60px 0 #e22b2e;\n              }\n              div.loading-wrap {\n                display: flex;\n                flex-direction: row;\n              }\n              input.keyword-input {\n                font-size: 13px;\n              }\n            `}\n          </style>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"outer-data-wrap\">\n          <div className=\"data-search-wrap\">\n            <div className=\"search-title\">\n              <div>\n                results for <strong>{keyword}</strong>\n              </div>\n            </div>\n            <div className=\"data-wrap\">\n              <div className=\"data-row\">\n                <div className=\"data-dat\">kw density</div>\n                <div className=\"data-dat-right\">{data.density}%</div>\n              </div>\n              <div className=\"data-row-2\">\n                <div className=\"data-dat\">avg wordcount</div>\n                <div className=\"data-dat-right\">{data.words}</div>\n              </div>\n            </div>\n            <div className=\"search-again-wrap\">\n              <button className=\"search-button\" onClick={searchAgain}>\n                search again\n              </button>\n            </div>\n          </div>\n        </div>\n        <style jsx>\n          {`\n            div.data-wrap {\n              display: flex;\n              flex-direction: column;\n              border: 1px solid rgba(0, 0, 0, 0.5);\n              margin: 12px 0;\n            }\n            .search-again-wrap {\n              display: flex;\n            }\n            div.data-row {\n              display: flex;\n              flex-direction: row;\n              max-width: 100%;\n              padding: 5px;\n            }\n            div.data-row-2 {\n              display: flex;\n              flex-direction: row;\n              max-width: 100%;\n              border-top: 1px solid rgba(0, 0, 0, 0.5);\n              padding: 5px;\n            }\n            div.data-dat {\n              width: 50%;\n            }\n            div.data-dat-right {\n              width: 50%;\n              text-align: right;\n            }\n            div.data-search-wrap {\n              display: flex;\n              flex-direction: column;\n              padding: 15px;\n              max-width: 100%;\n            }\n            .outer-data-wrap {\n              padding: 10px;\n              display: flex;\n              flex-direction: column;\n              min-width: 300px;\n            }\n            div.search-title {\n              margin: auto;\n              margin-bottom: 10px;\n              text-align: center;\n              margin-bottom: 5px;\n            }\n            button.search-button {\n              border-radius: 0;\n              border: none;\n              padding: 8px;\n              font-size: 10px;\n              background-color: #e22b2e;\n              color: #fff;\n              text-transform: uppercase;\n              letter-spacing: 1.5px;\n              font-weight: 700;\n              margin: auto;\n            }\n            .search-button:hover {\n              background: #fff;\n              color: #e22b2e;\n              border: 1px solid #e22b2e;\n              box-shadow: 0 4px 10px 0 rgba(0, 0, 0, 0.4);\n            }\n            div.loading-wrap {\n              display: flex;\n              flex-direction: row;\n            }\n            input.keyword-input {\n              font-size: 13px;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}